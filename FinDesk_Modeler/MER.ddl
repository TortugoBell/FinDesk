-- Tabela: Company
CREATE TABLE Company (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(255) NOT NULL,
    cnpj VARCHAR2(20) UNIQUE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabela: User
CREATE TABLE AppUser (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(255) NOT NULL,
    email VARCHAR2(255) UNIQUE NOT NULL,
    password_hash VARCHAR2(255) NOT NULL,
    profile VARCHAR2(20) CHECK (profile IN ('ADMIN', 'USER')) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    company_id NUMBER NOT NULL,
    CONSTRAINT fk_user_company FOREIGN KEY (company_id)
        REFERENCES Company(id) ON DELETE CASCADE
);

-- Tabela: BankAccount
CREATE TABLE BankAccount (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(255) NOT NULL,
    type VARCHAR2(20) CHECK (type IN ('CHECKING', 'SAVINGS', 'CASH', 'INVESTMENT')) NOT NULL,
    bank_name VARCHAR2(100),
    initial_balance NUMBER(15,2) DEFAULT 0 NOT NULL,
    company_id NUMBER NOT NULL,
    CONSTRAINT fk_bankaccount_company FOREIGN KEY (company_id)
        REFERENCES Company(id) ON DELETE CASCADE
);

-- Tabela: Category
CREATE TABLE Category (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(255) NOT NULL,
    type VARCHAR2(20) CHECK (type IN ('INCOME', 'EXPENSE')) NOT NULL,
    company_id NUMBER NOT NULL,
    parent_category_id NUMBER,
    CONSTRAINT fk_category_company FOREIGN KEY (company_id)
        REFERENCES Company(id) ON DELETE CASCADE,
    CONSTRAINT fk_category_parent FOREIGN KEY (parent_category_id)
        REFERENCES Category(id) ON DELETE SET NULL
);

-- Tabela: Transaction
CREATE TABLE Transaction (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description VARCHAR2(500) NOT NULL,
    amount NUMBER(15,2) NOT NULL,
    due_date DATE NOT NULL,
    payment_date DATE,
    type VARCHAR2(20) CHECK (type IN ('INCOME', 'EXPENSE', 'TRANSFER')) NOT NULL,
    status VARCHAR2(20) CHECK (status IN ('PENDING', 'PAID', 'CANCELED')) DEFAULT 'PENDING',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    bank_account_id NUMBER NOT NULL,
    category_id NUMBER,
    company_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    CONSTRAINT fk_transaction_account FOREIGN KEY (bank_account_id)
        REFERENCES BankAccount(id) ON DELETE CASCADE,
    CONSTRAINT fk_transaction_category FOREIGN KEY (category_id)
        REFERENCES Category(id) ON DELETE SET NULL,
    CONSTRAINT fk_transaction_company FOREIGN KEY (company_id)
        REFERENCES Company(id) ON DELETE CASCADE,
    CONSTRAINT fk_transaction_user FOREIGN KEY (user_id)
        REFERENCES AppUser(id) ON DELETE CASCADE
);

-- Tabela: Transfer
CREATE TABLE Transfer (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    amount NUMBER(15,2) NOT NULL,
    transfer_date DATE NOT NULL,
    description VARCHAR2(500),
    status VARCHAR2(20) CHECK (status IN ('PENDING', 'COMPLETED', 'CANCELED')) DEFAULT 'PENDING',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    origin_account_id NUMBER NOT NULL,
    destination_account_id NUMBER NOT NULL,
    company_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    CONSTRAINT fk_transfer_origin FOREIGN KEY (origin_account_id)
        REFERENCES BankAccount(id) ON DELETE CASCADE,
    CONSTRAINT fk_transfer_destination FOREIGN KEY (destination_account_id)
        REFERENCES BankAccount(id) ON DELETE CASCADE,
    CONSTRAINT fk_transfer_company FOREIGN KEY (company_id)
        REFERENCES Company(id) ON DELETE CASCADE,
    CONSTRAINT fk_transfer_user FOREIGN KEY (user_id)
        REFERENCES AppUser(id) ON DELETE CASCADE
);

-- √çndices opcionais para performance
CREATE INDEX idx_transaction_due_date ON Transaction(due_date);
CREATE INDEX idx_transaction_type ON Transaction(type);
CREATE INDEX idx_transfer_date ON Transfer(transfer_date);
